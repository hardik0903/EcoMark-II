{"ast":null,"code":"import React,{useState}from'react';import'./SustainableBrands.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GOOGLE_API_KEY='AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U';const MODEL_ID='text-bison-001';const API_URL=`https://generativelanguage.googleapis.com/v1beta2/models/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;function SustainableBrands(){const[brandName,setBrandName]=useState('');const[analysis,setAnalysis]=useState(null);const[score,setScore]=useState(null);const[error,setError]=useState(null);const handleAnalyze=async()=>{if(!brandName){setError('Please enter a brand name.');return;}setError(null);setAnalysis(null);setScore(null);try{var _data$candidates,_data$candidates$;const response=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:{text:`Provide a sustainability analysis and score (0-100%) for the brand: ${brandName}. Respond only in JSON format as {\\\"analysis\\\":\\\"...\\\", \\\"score\\\":\\\"x%\\\"}.`}})});const data=await response.json();console.log(data);const output=data===null||data===void 0?void 0:(_data$candidates=data.candidates)===null||_data$candidates===void 0?void 0:(_data$candidates$=_data$candidates[0])===null||_data$candidates$===void 0?void 0:_data$candidates$.output;if(output){const result=JSON.parse(output);setAnalysis(result.analysis||'No analysis available.');setScore(result.score||'No score available.');}else{setError('Failed to retrieve analysis.');}}catch(err){console.error(err);setError('An error occurred while analyzing the brand.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"sustainable-brands\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Is Your Favorite Brand Sustainable-Friendly?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Brand Name\",value:brandName,onChange:e=>setBrandName(e.target.value),className:\"brand-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAnalyze,className:\"analyze-button\",children:\"Analyze\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),analysis&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Analysis for \",brandName]}),/*#__PURE__*/_jsx(\"p\",{children:analysis}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Sustainability Score: \",score]})]})]});}export default SustainableBrands;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","GOOGLE_API_KEY","MODEL_ID","API_URL","SustainableBrands","brandName","setBrandName","analysis","setAnalysis","score","setScore","error","setError","handleAnalyze","_data$candidates","_data$candidates$","response","fetch","method","headers","body","JSON","stringify","prompt","text","data","json","console","log","output","candidates","result","parse","err","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/Hardik/OneDrive/Desktop/EcoMark/frontend/src/components/SustainableBrands.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SustainableBrands.css';\r\n\r\nconst GOOGLE_API_KEY = 'AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U';\r\nconst MODEL_ID = 'text-bison-001';\r\nconst API_URL = `https://generativelanguage.googleapis.com/v1beta2/models/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;\r\n\r\nfunction SustainableBrands() {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleAnalyze = async () => {\r\n    if (!brandName) {\r\n      setError('Please enter a brand name.');\r\n      return;\r\n    }\r\n    setError(null);\r\n    setAnalysis(null);\r\n    setScore(null);\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          prompt: {\r\n            text: `Provide a sustainability analysis and score (0-100%) for the brand: ${brandName}. Respond only in JSON format as {\\\"analysis\\\":\\\"...\\\", \\\"score\\\":\\\"x%\\\"}.`,\r\n          },\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const output = data?.candidates?.[0]?.output;\r\n\r\n      if (output) {\r\n        const result = JSON.parse(output);\r\n        setAnalysis(result.analysis || 'No analysis available.');\r\n        setScore(result.score || 'No score available.');\r\n      } else {\r\n        setError('Failed to retrieve analysis.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('An error occurred while analyzing the brand.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sustainable-brands\">\r\n      <h1>Is Your Favorite Brand Sustainable-Friendly?</h1>\r\n      <div className=\"input-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Brand Name\"\r\n          value={brandName}\r\n          onChange={(e) => setBrandName(e.target.value)}\r\n          className=\"brand-input\"\r\n        />\r\n        <button onClick={handleAnalyze} className=\"analyze-button\">\r\n          Analyze\r\n        </button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {analysis && (\r\n        <div className=\"result-section\">\r\n          <h2>Analysis for {brandName}</h2>\r\n          <p>{analysis}</p>\r\n          <h3>Sustainability Score: {score}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SustainableBrands;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}