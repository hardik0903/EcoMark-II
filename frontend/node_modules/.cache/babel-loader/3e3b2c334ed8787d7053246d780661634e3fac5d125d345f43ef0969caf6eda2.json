{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hardik\\\\OneDrive\\\\Desktop\\\\EcoMark\\\\frontend\\\\src\\\\components\\\\SustainableBrands.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SustainableBrands.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_API_KEY = 'AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U';\nconst MODEL_ID = 'text-bison-001';\nconst API_URL = `https://generativelanguage.googleapis.com/v1beta2/models/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;\nfunction SustainableBrands() {\n  _s();\n  const [brandName, setBrandName] = useState('');\n  const [analysis, setAnalysis] = useState(null);\n  const [score, setScore] = useState(null);\n  const [error, setError] = useState(null);\n  const handleAnalyze = async () => {\n    if (!brandName) {\n      setError('Please enter a brand name.');\n      return;\n    }\n    setError(null);\n    setAnalysis(null);\n    setScore(null);\n    try {\n      var _data$candidates, _data$candidates$;\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: {\n            text: `Provide a sustainability analysis and score (0-100%) for the brand: ${brandName}. Respond only in JSON format as {\\\"analysis\\\":\\\"...\\\", \\\"score\\\":\\\"x%\\\"}.`\n          }\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      const output = data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : _data$candidates$.output;\n      if (output) {\n        const result = JSON.parse(output);\n        setAnalysis(result.analysis || 'No analysis available.');\n        setScore(result.score || 'No score available.');\n      } else {\n        setError('Failed to retrieve analysis.');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred while analyzing the brand.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sustainable-brands\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Is Your Favorite Brand Sustainable-Friendly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Brand Name\",\n        value: brandName,\n        onChange: e => setBrandName(e.target.value),\n        className: \"brand-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnalyze,\n        className: \"analyze-button\",\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Analysis for \", brandName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: analysis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Sustainability Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(SustainableBrands, \"RmRxE/tLjvY2XX6aOcGLGKcGgYM=\");\n_c = SustainableBrands;\nexport default SustainableBrands;\nvar _c;\n$RefreshReg$(_c, \"SustainableBrands\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GOOGLE_API_KEY","MODEL_ID","API_URL","SustainableBrands","_s","brandName","setBrandName","analysis","setAnalysis","score","setScore","error","setError","handleAnalyze","_data$candidates","_data$candidates$","response","fetch","method","headers","body","JSON","stringify","prompt","text","data","json","console","log","output","candidates","result","parse","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hardik/OneDrive/Desktop/EcoMark/frontend/src/components/SustainableBrands.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SustainableBrands.css';\r\n\r\nconst GOOGLE_API_KEY = 'AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U';\r\nconst MODEL_ID = 'text-bison-001';\r\nconst API_URL = `https://generativelanguage.googleapis.com/v1beta2/models/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;\r\n\r\nfunction SustainableBrands() {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleAnalyze = async () => {\r\n    if (!brandName) {\r\n      setError('Please enter a brand name.');\r\n      return;\r\n    }\r\n    setError(null);\r\n    setAnalysis(null);\r\n    setScore(null);\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          prompt: {\r\n            text: `Provide a sustainability analysis and score (0-100%) for the brand: ${brandName}. Respond only in JSON format as {\\\"analysis\\\":\\\"...\\\", \\\"score\\\":\\\"x%\\\"}.`,\r\n          },\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const output = data?.candidates?.[0]?.output;\r\n\r\n      if (output) {\r\n        const result = JSON.parse(output);\r\n        setAnalysis(result.analysis || 'No analysis available.');\r\n        setScore(result.score || 'No score available.');\r\n      } else {\r\n        setError('Failed to retrieve analysis.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('An error occurred while analyzing the brand.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sustainable-brands\">\r\n      <h1>Is Your Favorite Brand Sustainable-Friendly?</h1>\r\n      <div className=\"input-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Brand Name\"\r\n          value={brandName}\r\n          onChange={(e) => setBrandName(e.target.value)}\r\n          className=\"brand-input\"\r\n        />\r\n        <button onClick={handleAnalyze} className=\"analyze-button\">\r\n          Analyze\r\n        </button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {analysis && (\r\n        <div className=\"result-section\">\r\n          <h2>Analysis for {brandName}</h2>\r\n          <p>{analysis}</p>\r\n          <h3>Sustainability Score: {score}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SustainableBrands;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}