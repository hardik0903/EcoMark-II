{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hardik\\\\OneDrive\\\\Desktop\\\\EcoMark\\\\frontend\\\\src\\\\components\\\\SustainableBrands.js\",\n  _s = $RefreshSig$();\n// src/components/SustainableBrands.js\nimport React, { useState } from 'react';\nimport './SustainableBrands.css';\n\n// Embed your Google API key (WARNING: Hardcoding your API key is not recommended for production)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_API_KEY = \"AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U\";\n\n// Replace with your numeric project number (not the project ID)\nconst NUMERIC_PROJECT_NUMBER = \"123456789012\"; // <-- REPLACE with your actual numeric project number\n\n// Fully qualified model name using the numeric project number\nconst MODEL_ID = `projects/${NUMERIC_PROJECT_NUMBER}/locations/us-central1/models/text-bison-001`;\n\n// Construct the API URL using the fully qualified model name\nconst API_BASE_URL = `https://generativelanguage.googleapis.com/v1beta2/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;\nfunction SustainableBrands() {\n  _s();\n  const [brandName, setBrandName] = useState('');\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Function to call your Flask backend proxy endpoint that in turn calls Google API\n  // (If you want to call Google API directly from the client, use the code below.)\n  const generateContent = async prompt => {\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: {\n            text: prompt\n          },\n          temperature: 0.7,\n          candidate_count: 1\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error.message || \"Unknown error\");\n      }\n      // Assuming the API returns an object with a 'candidates' array,\n      // and each candidate has an 'output' field.\n      if (data.candidates && data.candidates.length > 0) {\n        return data.candidates[0].output;\n      }\n      return \"\";\n    } catch (err) {\n      console.error(\"Error in generateContent:\", err);\n      throw err;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!brandName.trim()) {\n      setError('Please enter a brand name');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Build prompt for detailed analysis with context\n      const analysisPrompt = `Gather and process information from various sources—including corporate sustainability reports, news articles, and online reviews—about the brand \"${brandName}\". Provide a detailed analysis of its sustainability efforts (energy efficiency, waste reduction, ethical sourcing, etc.) and include a brief contextual summary. Separate the detailed analysis and the context summary with the delimiter \"CONTEXT:\"`;\n      const analysisText = await generateContent(analysisPrompt);\n      let detailedAnalysis = analysisText;\n      let contextSummary = \"No additional context provided.\";\n      if (analysisText.includes(\"CONTEXT:\")) {\n        const parts = analysisText.split(\"CONTEXT:\");\n        detailedAnalysis = parts[0].trim();\n        contextSummary = parts[1].trim();\n      }\n\n      // Build prompt for sustainability score (expecting JSON output)\n      const scorePrompt = `Provide only a JSON object containing the sustainable score of the brand in the following format: {\"score\": \"x%\"} (do not include any additional text)`;\n      const scoreResponseText = await generateContent(scorePrompt);\n      const match = scoreResponseText.match(/(\\d+)%/);\n      let scoreValue = match ? parseFloat(match[1]) : 50;\n      setAnalysis({\n        brandName: brandName.trim(),\n        analysis: detailedAnalysis,\n        context: contextSummary,\n        score: scoreValue\n      });\n    } catch (err) {\n      console.error('Error analyzing brand:', err);\n      setError('Failed to analyze brand. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderGaugeMeter = () => {\n    if (!analysis) return null;\n    const {\n      score\n    } = analysis;\n    const angle = score / 100 * 180;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauge-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-fill\",\n          style: {\n            transform: `rotate(${angle}deg)`,\n            backgroundColor: score > 50 ? '#4CAF50' : '#FF5252'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-cover\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sustainable-brands\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      className: \"bg-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"https://cdn.pixabay.com/video/2017/01/12/7241-199190972_large.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Is Your Favorite Brand Sustainable-friendly?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: brandName,\n          onChange: e => setBrandName(e.target.value),\n          placeholder: \"Enter brand name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Analyze Brand'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Sustainability Analysis for \", analysis.brandName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), renderGaugeMeter(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sustainability Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-content\",\n          children: analysis.analysis.split('\\n').map((paragraph, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-context\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: analysis.context\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(SustainableBrands, \"jlGLoBTr1BLjUufOt32fny8wOdw=\");\n_c = SustainableBrands;\nexport default SustainableBrands;\nvar _c;\n$RefreshReg$(_c, \"SustainableBrands\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GOOGLE_API_KEY","NUMERIC_PROJECT_NUMBER","MODEL_ID","API_BASE_URL","SustainableBrands","_s","brandName","setBrandName","analysis","setAnalysis","loading","setLoading","error","setError","generateContent","prompt","response","fetch","method","headers","body","JSON","stringify","text","temperature","candidate_count","data","json","Error","message","candidates","length","output","err","console","handleSubmit","e","preventDefault","trim","analysisPrompt","analysisText","detailedAnalysis","contextSummary","includes","parts","split","scorePrompt","scoreResponseText","match","scoreValue","parseFloat","context","score","renderGaugeMeter","angle","className","children","style","transform","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","playsInline","src","type","onSubmit","value","onChange","target","placeholder","required","disabled","map","paragraph","idx","_c","$RefreshReg$"],"sources":["C:/Users/Hardik/OneDrive/Desktop/EcoMark/frontend/src/components/SustainableBrands.js"],"sourcesContent":["// src/components/SustainableBrands.js\r\nimport React, { useState } from 'react';\r\nimport './SustainableBrands.css';\r\n\r\n// Embed your Google API key (WARNING: Hardcoding your API key is not recommended for production)\r\nconst GOOGLE_API_KEY = \"AIzaSyBY_24wnWmxwNpjAzdi2CUQGJLfZh7b61U\";\r\n\r\n// Replace with your numeric project number (not the project ID)\r\nconst NUMERIC_PROJECT_NUMBER = \"123456789012\";  // <-- REPLACE with your actual numeric project number\r\n\r\n// Fully qualified model name using the numeric project number\r\nconst MODEL_ID = `projects/${NUMERIC_PROJECT_NUMBER}/locations/us-central1/models/text-bison-001`;\r\n\r\n// Construct the API URL using the fully qualified model name\r\nconst API_BASE_URL = `https://generativelanguage.googleapis.com/v1beta2/${MODEL_ID}:generate?key=${GOOGLE_API_KEY}`;\r\n\r\nfunction SustainableBrands() {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Function to call your Flask backend proxy endpoint that in turn calls Google API\r\n  // (If you want to call Google API directly from the client, use the code below.)\r\n  const generateContent = async (prompt) => {\r\n    try {\r\n      const response = await fetch(API_BASE_URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: {\r\n            text: prompt\r\n          },\r\n          temperature: 0.7,\r\n          candidate_count: 1\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(data.error.message || \"Unknown error\");\r\n      }\r\n      // Assuming the API returns an object with a 'candidates' array,\r\n      // and each candidate has an 'output' field.\r\n      if (data.candidates && data.candidates.length > 0) {\r\n        return data.candidates[0].output;\r\n      }\r\n      return \"\";\r\n    } catch (err) {\r\n      console.error(\"Error in generateContent:\", err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!brandName.trim()) {\r\n      setError('Please enter a brand name');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      // Build prompt for detailed analysis with context\r\n      const analysisPrompt = `Gather and process information from various sources—including corporate sustainability reports, news articles, and online reviews—about the brand \"${brandName}\". Provide a detailed analysis of its sustainability efforts (energy efficiency, waste reduction, ethical sourcing, etc.) and include a brief contextual summary. Separate the detailed analysis and the context summary with the delimiter \"CONTEXT:\"`;\r\n      const analysisText = await generateContent(analysisPrompt);\r\n      let detailedAnalysis = analysisText;\r\n      let contextSummary = \"No additional context provided.\";\r\n      if (analysisText.includes(\"CONTEXT:\")) {\r\n        const parts = analysisText.split(\"CONTEXT:\");\r\n        detailedAnalysis = parts[0].trim();\r\n        contextSummary = parts[1].trim();\r\n      }\r\n      \r\n      // Build prompt for sustainability score (expecting JSON output)\r\n      const scorePrompt = `Provide only a JSON object containing the sustainable score of the brand in the following format: {\"score\": \"x%\"} (do not include any additional text)`;\r\n      const scoreResponseText = await generateContent(scorePrompt);\r\n      const match = scoreResponseText.match(/(\\d+)%/);\r\n      let scoreValue = match ? parseFloat(match[1]) : 50;\r\n      \r\n      setAnalysis({\r\n        brandName: brandName.trim(),\r\n        analysis: detailedAnalysis,\r\n        context: contextSummary,\r\n        score: scoreValue\r\n      });\r\n    } catch (err) {\r\n      console.error('Error analyzing brand:', err);\r\n      setError('Failed to analyze brand. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderGaugeMeter = () => {\r\n    if (!analysis) return null;\r\n    const { score } = analysis;\r\n    const angle = (score / 100) * 180;\r\n    return (\r\n      <div className=\"gauge-container\">\r\n        <div className=\"gauge\">\r\n          <div\r\n            className=\"gauge-fill\"\r\n            style={{\r\n              transform: `rotate(${angle}deg)`,\r\n              backgroundColor: score > 50 ? '#4CAF50' : '#FF5252'\r\n            }}\r\n          ></div>\r\n          <div className=\"gauge-cover\">\r\n            <span>{score}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"sustainable-brands\">\r\n      {/* Background Video */}\r\n      <video autoPlay loop muted playsInline className=\"bg-video\">\r\n        <source\r\n          src=\"https://cdn.pixabay.com/video/2017/01/12/7241-199190972_large.mp4\"\r\n          type=\"video/mp4\"\r\n        />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <div className=\"video-overlay\"></div>\r\n      \r\n      <h1>Is Your Favorite Brand Sustainable-friendly?</h1>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={brandName}\r\n            onChange={(e) => setBrandName(e.target.value)}\r\n            placeholder=\"Enter brand name...\"\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? 'Analyzing...' : 'Analyze Brand'}\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </form>\r\n      \r\n      {analysis && (\r\n        <div className=\"analysis-results\">\r\n          <h2>Sustainability Analysis for {analysis.brandName}</h2>\r\n          {renderGaugeMeter()}\r\n          <div className=\"analysis-text\">\r\n            <h3>Sustainability Report</h3>\r\n            <div className=\"report-content\">\r\n              {analysis.analysis.split('\\n').map((paragraph, idx) => (\r\n                <p key={idx}>{paragraph}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"analysis-context\">\r\n              <h3>Context</h3>\r\n              <div className=\"report-content\">\r\n                <p>{analysis.context}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SustainableBrands;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}